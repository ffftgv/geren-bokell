name: Sync Public Gitee Repository (Debug Mode)

on:
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *' # 每20分钟同步一次

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: 1️⃣ 显示环境信息
        run: |
          echo "🔍 当前工作目录: $(pwd)"
          echo "📦 GitHub 仓库: ${{ github.repository }}"
          echo "👤 仓库所有者: ${{ github.repository_owner }}"
          echo "🔖 仓库名称: ${{ github.event.repository.name || github.event.repository.slug }}"
          echo "🔄 事件类型: ${{ github.event_name }}"
          echo "🖥️ 运行器信息: $RUNNER_OS, $RUNNER_ARCH"

      - 名字: 2️⃣ 检查 Gitee 仓库可访问性
        run: |
          echo "📡 测试 Gitee 仓库连通性..."
          curl -I https://gitee.com/wzjwwcom/personal-blog.git
          echo "✅ Gitee 仓库可访问"

      - 名字: 3️⃣ 克隆 Gitee 仓库
        run: |
          echo "📥 开始克隆 Gitee 仓库..."
          git clone https://gitee.com/wzjwwcom/personal-blog.git repo
          cd repo
          echo "📂 克隆成功! 仓库内容:"
          ls -la
          echo "🆔 仓库 HEAD 提交:"
          git log -1

      - 名字: 4️⃣ 配置并推送至 GitHub
        run: |
          cd repo
          
          # 配置 Git 信息
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          
          # 构建 GitHub 仓库 URL (多种方式尝试)
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name || github.event.repository.slug || github.repository }}"

          # 如果 REPO_NAME 仍然包含斜杠，则分割
          if [[ "$REPO_NAME" == *"/"* ]]; then
            REPO_OWNER="${REPO_NAME%%/*}"
            REPO_NAME="${REPO_NAME#*/}"
          fi
          
          echo "📤 构建 GitHub 仓库 URL..."
          GITHUB_URL="https://x-access-token:${{ github.token }}@github.com/$REPO_OWNER/$REPO_NAME.git"
          echo "🔗 使用 URL: $GITHUB_URL"
          
          # 测试 URL 连通性
          curl -I "$GITHUB_URL" || echo "⚠️ 注意: curl 测试可能失败，因为需要认证"
          
          # 添加远程仓库
          git remote add github "$GITHUB_URL" || git remote set-url github "$GITHUB_URL"
          
          echo "🔄 获取远程信息..."
          git remote -v
          
          echo "📤 推送所有分支..."
          git push -u github --all --force || {
            echo "❌ 推送失败! 尝试详细错误诊断:"
            git ls-remote --heads "$GITHUB_URL" || echo "无法列出远程分支"
            exit 1
          }
          
          echo "🏷️ 推送所有标签..."
          git push -u github --tags --force
